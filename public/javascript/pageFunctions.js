/*
This function builds news story pages as they have similar yet not identical
functions.
It also copies an original page template for the other pages the will be
using the same template.
The loadStory function is added onto an object retrospectively so that the
functions local variables without the scope being blocked this by 'this' 
Object
*/
const buildNewsPages = (data) => {
    for (let i = 2; i <= 11; i++) {
        let index = i < 10 ? `0${i}` : i;

        cacheDOM[`1${index}`] = cacheDOM['102'];

        pageTemplates[`1${index}`] = pageTemplates['102'];

        // build customised functions for news pages
        pageFunctions[`1${index}`] = {};
        pageFunctions[`1${index}`].loadStory = (index = i - 2) => {
            pageVDOM['102-11'].headline.innerText = data[index].title;
            pageVDOM['102-11'].story.innerText = data[index].description;
        };
    }
}

const pageFunctions = {
    '100': {
        /*
        Does what it says on the tin.
        */
        loadHeadline: () => {
            // const reel = document.querySelector('.p100 .p100__updates--reel');
            const headline = apidata.news[0].title;

            // reel.innerText = apidata.news[0].title.slice(0,30);
            if (headline.length > 32) {
                pageVDOM['100'].reel.innerText = `${headline.slice(0, 32)}...P102`
            }
        },
        /*
        Add the correct number of trailing dots as compared to the text length
        and the screen width
        */
        contentTrails: () => {
            const trailLength = window.innerWidth < 580 ? 29 : 15;

            for (let page of pageVDOM['100'].indices) {
                const pageName = page.children[0].innerText;
                const pageNumber = page.children[1];

                pageNumber.innerText = `${'.'.repeat(trailLength - pageName.length - 1)}${pageNumber.innerText.replaceAll('.', '')}`;
            }
        }
    },
    '101': {
        loadHeadlines: () => {
            for (let i = 0; i < pageVDOM['101'].headlines.length; i++) {
                pageVDOM['101'].headlines[i].innerText = apidata.news[i].title;
            }
        }
    },
    /*
    Pages 102-111 are autogenerated after api fetch
    */

    '400': {
        loadTemps: () => {
            apidata.weather.forEach(forecast => {
                const temp = forecast.temp < 10 ? `0${forecast.temp}` : forecast.temp
                pageVDOM['400'].temps[forecast.city].innerText = temp;
            })
        },
        loadSummary: (index = 0) => {
            let i = programme.currentSlide + 1 || index;
            if (i > 6) i = 0;
            pageVDOM['400'].city.innerText = apidata.weather[i].city;
            pageVDOM['400'].description.innerText = apidata.weather[i].description;
            pageVDOM['400'].pageCount.innerText = i + 1;
            programme.currentSlide = i;
        }
    },
}

console.log('Page Functions Loaded!');